package com.example.RestaurantManagement;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.Security;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SendEmailHandler extends javax.mail.Authenticator
{
    private String mailhost;
    private String username;
    private String password;
    private Session session;

    static
    {
        Security.addProvider(new JSSEProvider());
    }

    public SendEmailHandler(String username, String password)
    {
        this.mailhost = "smtp.gmail.com";
        this.username = username;
        this.password = password;

        Properties properties = new Properties();
        properties.setProperty("mail.transport.protocol", "smtp");
        properties.setProperty("mail.host", this.mailhost);
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.port", "465");
        properties.put("mail.smtp.socketFactory.port", "465");
        properties.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        properties.put("mail.smtp.socketFactory.fallback", "false");
        properties.setProperty("mail.smtp.quitwait", "false");

        this.session = Session.getDefaultInstance(properties, this);
    }

    protected PasswordAuthentication getPasswordAuthentication()
    {
        return new PasswordAuthentication(this.username, this.password);
    }

    public synchronized void sendMail(String subject, String body, String sender,
        String recipients)
    {
        try
        {
            MimeMessage message = new MimeMessage(this.session);
            DataHandler handler = new DataHandler(new ByteArrayDataSource(body.getBytes(),
                "text/plain"));
            message.setSender(new InternetAddress(sender));
            message.setSubject(subject);
            message.setDataHandler(handler);

            if (recipients.indexOf(',') > 0)
            {
                message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipients));
            }
            else
            {
                message.setRecipient(Message.RecipientType.TO, new InternetAddress(recipients));
            }

            Transport.send(message);
        }
        catch(Exception e)
        {

        }
    }

    public class ByteArrayDataSource implements DataSource
    {
        private byte[] data;
        private String type;

        public ByteArrayDataSource(byte[] data, String type)
        {
            super();
            this.data = data;
            this.type = type;
        }

        public ByteArrayDataSource(byte[] data)
        {
            super();
            this.data = data;
        }

        public void setType(String type)
        {
            this.type = type;
        }

        public String getContentType()
        {
            if (this.type == null)
            {
                return "application/octet-stream";
            }
            else
            {
                return this.type;
            }
        }

        public InputStream getInputStream() throws IOException
        {
            return new ByteArrayInputStream(this.data);
        }

        public String getName()
        {
            return "ByteArrayDataSource";
        }

        public OutputStream getOutputStream() throws IOException
        {
            throw new IOException("Not Supported");
        }
    }
}